// Copyright (c) 2005 - 2014 Marc de Kamps
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
//
//    * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation 
//      and/or other materials provided with the distribution.
//    * Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software 
//      without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY 
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF 
// USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//      If you use this software in work leading to a scientific publication, you should include a reference there to
//      the 'currently valid reference', which can be found at http://miind.sourceforge.net

#include <vector>
#include <fstream>
#include <GeomLib.hpp>

using GeomLib::ResponseParameter;

using std::ofstream;
using std::vector;

int main(int argc, char *argv[]){

  ResponseParameter par_resp;
  par_resp.tau            = 20e-3;
  par_resp.theta          = 20e-3;
  par_resp.V_reset        = 0;
  par_resp.V_reversal     = 0;
  par_resp.tau_refractive = 0; 

  vector<double> sigma;
  sigma.push_back(1e-3);
  sigma.push_back(2e-3);
  sigma.push_back(5e-3);
  sigma.push_back(7e-3);

  int n= 600;
  double delta    = 0.01e-3;
  double mu_start = 15e-3;

  vector<double> mu;

  for(int i = 0; i < n; i++)
    mu.push_back(mu_start+i*delta);

  ofstream f("analytic.dat");
  f << "Machine generated by MIIND_ROOT/build/apps/PerformanceGeom/ResponseData\n";

  for(auto s: sigma)
    for(auto m: mu ){
      par_resp.mu    = m;
      par_resp.sigma = s;
      double nu = GeomLib::ResponseFunction(par_resp);
      f << m << "\t" << s << " " << nu << "\n";
    }
  return 0;
  
}
