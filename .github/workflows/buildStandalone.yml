name: Build Standalone

on: [push]

jobs: 
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
          - os: ubuntu-latest
          - os: macos-latest
            
    env:
      buildDir: '${{ github.workspace }}/build'
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      
      - uses: lukka/get-cmake@latest
      
      - name: Ubuntu - install dependencies
        run: |
          sudo apt-get install libboost-all-dev libpugixml-dev fftw3-dev freeglut3-dev libgsl0-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev mesa-common-dev libxrandr-dev libxxf86vm-dev
        if: contains( matrix.os, 'ubuntu')
        
      - name: MacOS - install xquartz for GL support, fftw, and llvm for OpenMP support
        run: brew install gcc pugixml boost freeglut gsl boost-python xquartz fftw llvm libomp pkg-config
        if: contains( matrix.os, 'macos')

      - name: dir
        run: find $RUNNER_TEMP
        shell: bash
      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash
      - name: Install vcpkg on windows
        # Download and build vcpkg, without installing any port. If content is cached already, it is a no-op.
        uses: lukka/run-vcpkg@v6
        with:
          setupOnly: true
          appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
          doNotCache: true
        if: contains( matrix.os, 'windows')
      # Now that vcpkg is installed, it is being used to run with the desired arguments.
      - name: Install vcpkg on windows
        run: |
            $VCPKG_ROOT/vcpkg install --overlay-triplets=custom-triplets boost:${{matrix.triplet}} fftw3:${{matrix.triplet}} gsl:${{matrix.triplet}} python3:${{matrix.triplet}} pugixml:${{matrix.triplet}} glew:${{matrix.triplet}} freeglut:${{matrix.triplet}}
            cp custom-triplets/*.cmake $VCPKG_ROOT/triplets
        shell: bash
        if: contains( matrix.os, 'windows')
      - name: Run CMake with vcpkg.json manifest on windows
        uses: lukka/run-cmake@main
        with:
          cmakeListsOrSettingsJson: CMakeSettingsJson
          cmakeSettingsJsonPath: '${{ github.workspace }}/CMakeSettings.json'
          useVcpkgToolchainFile: true
          appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
          buildDirectory: '${{ env.buildDir }}'
          cmakeAppendedArgs: '"-GNinja" -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet}}'
          buildWithCMake: true
        if: contains( matrix.os, 'windows')
      - name: Run CMake
        uses: lukka/run-cmake@main
        with:
          cmakeListsOrSettingsJson: CMakeSettingsJson
          cmakeSettingsJsonPath: '${{ github.workspace }}/CMakeSettings.json'
          buildDirectory: '${{ env.buildDir }}'
          cmakeAppendedArgs: '"-GNinja"'
          buildWithCMake: true
        if: contains( matrix.os, 'macos') or contains( matrix.os, 'ubuntu')
      - name: Add python directory to path ready for tests
        run: echo "${{ github.workspace }}/python/" >> $GITHUB_PATH
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine scikit-build build auditwheel numpy matplotlib==3.2 scipy shapely descartes
        shell: bash
      
        
        
