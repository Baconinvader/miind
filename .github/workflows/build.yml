name: Build

on: [push]

jobs: 
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15] 
        include:
          - os: windows-2019
            triplet: x64-windows
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
          - os: ubuntu-18.04
            triplet: x64-linux-mixed
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
          - os: macos-10.15
            triplet: x64-osx-mixed
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
            
    env:
      buildDir: '${{ github.workspace }}/build'
      CIBW_BUILD: cp36-manylinux_x86_64 cp37-manylinux_x86_64 cp38-manylinux_x86_64 cp39-manylinux_x86_64 cp36-win_amd64 cp37-win_amd64 cp38-win_amd64 cp39-win_amd64 cp36-macosx_x86_64 cp37-macosx_x86_64 cp38-macosx_x86_64 cp39-macosx_x86_64
      CIBW_MANYLINUX_X86_64_IMAGE: quay.io/pypa/manylinux2014_x86_64:latest
      CIBW_BEFORE_BUILD: pip install scikit-build build auditwheel numpy matplotlib scipy shapely descartes
      CIBW_BEFORE_BUILD_LINUX: bash setupCiBuildPython.sh ; yum install -y python36-devel ninja-build boost-devel pugixml-devel freeglut-devel gsl-devel libXi-devel mesa-libGL-devel mesa-libGLU-devel libXrandr-devel libXxf86vm-devel fftw-devel
      CIBW_BEFORE_BUILD_WINDOWS: choco install visualstudio2017community visualstudio2017-workload-nativedesktop ninja -y
      CIBW_BEFORE_BUILD_MACOS: brew install gcc6 pugixml boost freeglut gsl boost-python3 xquartz fftw libomp pkg-config ninja
      CIBW_REPAIR_WHEEL_COMMAND_MACOS: delocate-listdeps {wheel} && delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel} 
      CIBW_ENVIRONMENT_MACOS: "CC=gcc-6 CXX=g++-6"
      CIBW_BUILD_VERBOSITY: 0
      CIBW_TEST_COMMAND: python -m miind.system_tests
    steps:
    
      - uses: actions/checkout@v2
        with:
          submodules: true
          
      - uses: lukka/get-cmake@latest
      
      - run: |
            cp custom-triplets/*.cmake vcpkg/triplets
        shell: bash
        
      - name: One time delete vcpkg
        run: rm -rf vcpkg_installed
        shell: bash
        
      #- name: Install vcpkg
      #  # Download and build vcpkg, without installing any port. If content is cached already, it is a no-op.
      #  uses: lukka/run-vcpkg@v6
      #  with:
      #    setupOnly: true
      #    vcpkgDirectory: '${{ github.workspace }}/vcpkg'
      #    additionalCachedPaths: ${{ env.buildDir }}/vcpkg_installed
      #    appendedCacheKey: ${{matrix.os}}-build-vcpkg-v3-${{ hashFiles( '**/vcpkg.json' ) }}
      #    vcpkgTriplet: ${{ matrix.triplet }}
      #    doNotCache: true
      #  if: contains( matrix.os, 'windows')

      #- name: Run CMake with vcpkg.json manifest
      #  uses: lukka/run-cmake@main
      #  with:
      #    cmakeListsOrSettingsJson: CMakeSettingsJson
      #    cmakeSettingsJsonPath: '${{ github.workspace }}/CMakeSettings.json'
      #    useVcpkgToolchainFile: true
      #    buildDirectory: '${{ env.buildDir }}'
      #    cmakeAppendedArgs: '"-GNinja" -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet}}'
      #    buildWithCMake: true
      #  if: contains( matrix.os, 'windows')

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
          
      - name: Install cibuildwheel
        run: |
          python -m pip install numpy matplotlib==3.2 scipy descartes shapely twine cibuildwheel==1.8.0

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
            
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl 

      - name: Publish package  
        run: python -m twine upload -u __token__ -p pypi-AgENdGVzdC5weXBpLm9yZwIkOGUzMWI0OGYtZjE0ZS00ZGUzLTkxNjEtZmYzZWJkODEyYzgwAAIleyJwZXJtaXNzaW9ucyI6ICJ1c2VyIiwgInZlcnNpb24iOiAxfQAABiA5aJXbljJQ0NQRu5Wn9f3v4CB35xhwzauoq72exCLs4A --skip-existing --repository testpypi ./wheelhouse/*
        if: github.event_name == 'push' # && startsWith(github.ref, 'refs/tags')
        