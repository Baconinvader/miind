name: Build

on: [push]

jobs: 
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
          - os: ubuntu-latest
            triplet: x64-linux-mixed
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
          - os: macos-latest
            triplet: x64-osx-mixed
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
            
    env:
      buildDir: '${{ github.workspace }}/build'
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      
      - uses: lukka/get-cmake@latest
      
      - name: Ubuntu - install packages required for freeglut and fftw3
        run: |
          sudo apt-get install libxi-dev libgl1-mesa-dev libglu1-mesa-dev mesa-common-dev libxrandr-dev libxxf86vm-dev
          sudo apt-get install fftw3-dev
        if: contains( matrix.os, 'ubuntu')
        
      - name: MacOS - install xquartz for GL support, fftw, and llvm for OpenMP support
        run: brew install gcc xquartz fftw llvm libomp pkg-config
        if: contains( matrix.os, 'macos')

      - name: dir
        run: find $RUNNER_TEMP
        shell: bash
      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash
      - name: Install vcpkg
        # Download and build vcpkg, without installing any port. If content is cached already, it is a no-op.
        uses: lukka/run-vcpkg@v6
        with:
          setupOnly: true
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          additionalCachedPaths: ${{ env.buildDir }}/vcpkg_installed
          appendedCacheKey: ${{matrix.os}}-build-vcpkg-v2-${{ hashFiles( '**/vcpkg.json' ) }}
          vcpkgTriplet: ${{ matrix.triplet }}
          doNotCache: true
        
      - name: Prints output of run-vcpkg's action
        run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}'"
        
      - name: Run CMake with vcpkg.json manifest
        uses: lukka/run-cmake@main
        with:
          cmakeListsOrSettingsJson: CMakeSettingsJson
          cmakeSettingsJsonPath: '${{ github.workspace }}/CMakeSettings.json'
          useVcpkgToolchainFile: true
          buildDirectory: '${{ env.buildDir }}'
          cmakeAppendedArgs: '"-GNinja" -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet}}'
          buildWithCMake: true
      
      #- name: Add python directory to path ready for tests
      #  run: echo "${{ github.workspace }}/python/" >> $GITHUB_PATH
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine scikit-build build auditwheel numpy matplotlib==3.2 scipy shapely descartes
        shell: bash
      - name: Run scikit-build
        run: |
          cd package/pip_package
          python setup.py bdist_wheel
        shell: bash
      - name: Run auditwheel on linux and osx
        run: |
          cd package/pip_package/dist
          ls
        shell: bash
        
        
