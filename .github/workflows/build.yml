name: Build
on: [push]

jobs: 
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15] 
        include:
          - os: windows-2019
            triplet: x64-windows
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
          - os: ubuntu-18.04
            triplet: x64-linux-mixed
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
          - os: macos-10.15
            triplet: x64-osx-mixed
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
            
    env:
      buildDir: '${{ github.workspace }}/build'
      CIBW_BUILD: cp36-manylinux_x86_64 cp37-manylinux_x86_64 cp38-manylinux_x86_64 cp39-manylinux_x86_64 cp36-win_amd64 cp37-win_amd64 cp38-win_amd64 cp39-win_amd64 cp36-macosx_x86_64 cp37-macosx_x86_64 cp38-macosx_x86_64 cp39-macosx_x86_64
      CIBW_MANYLINUX_X86_64_IMAGE: quay.io/pypa/manylinux2014_x86_64:latest
      CIBW_BEFORE_BUILD: pip install scikit-build build auditwheel numpy matplotlib scipy shapely descartes
      CIBW_BEFORE_BUILD_LINUX: bash setupCiBuildPython.sh ; yum install -y python36-devel ninja-build boost-devel pugixml-devel freeglut-devel gsl-devel libXi-devel mesa-libGL-devel mesa-libGLU-devel libXrandr-devel libXxf86vm-devel fftw-devel ; yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm ; yum-config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo ; yum clean expire-cache ; yum install nvidia-driver-latest-dkms cuda cuda-drivers
      CIBW_BEFORE_BUILD_WINDOWS: choco install visualstudio2017community visualstudio2017-workload-vctools -y & choco upgrade -y visualstudio2017-workload-vctools & choco install visualstudio2017-workload-nativedesktop ninja -y & cd \"C:/Program Files (x86)/Microsoft Visual Studio/\" & dir & C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Auxiliary/Build/vcvarsall.bat
      CIBW_BEFORE_BUILD_MACOS: brew install gcc6 pugixml freeglut gsl boost-python3 xquartz fftw libomp pkg-config ninja boost
      CIBW_REPAIR_WHEEL_COMMAND_MACOS: "" #delocate-listdeps -d -a {wheel} && delocate-wheel -w {dest_dir} -v {wheel}
      CIBW_ENVIRONMENT_MACOS: "CC=gcc-6 CXX=g++-6"
      CIBW_ENVIRONMENT_WINDOWS: "PATH=$PATH:\"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.2/bin\":\"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.2/libnvvp\":\"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.16.27023/bin/Hostx64/x64\" CUDA_PATH=\"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.2\" CUDACXX=\"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.2/bin/nvcc.exe\""
      CIBW_ENVIRONMENT_LINUX: "PATH=$PATH:/usr/lib64/openmpi/bin/ LD_LIBRARY_PATH=/usr/lib64/openmpi/lib:/usr/lib64/nvidia:$LD_LIBRARY_PATH"
      CIBW_BUILD_VERBOSITY: 0
      CIBW_TEST_COMMAND: python -m miind.system_tests
    steps:
    
      - uses: actions/checkout@v2
        with:
          submodules: true
          
      - uses: lukka/get-cmake@latest
      
      - run: |
            cp custom-triplets/*.cmake vcpkg/triplets
        shell: bash
        
      #- name: One time delete vcpkg
      #  run: rm -rf vcpkg_installed
      #  shell: bash

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
          
      - name: Install cibuildwheel
        run: |
          python -m pip install numpy matplotlib==3.2 scipy descartes shapely twine cibuildwheel==1.8.0
        
      #- name: Build sdist wheel
      #  run: python setup.py sdist

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
            
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl 

      - name: Publish package to test pypi
        run: python -m twine upload -u __token__ -p ${{ secrets.PYPI_TEST_MIIND_API_TOKEN }} --skip-existing --repository testpypi ./wheelhouse/*
        if: github.event_name == 'push' # && startsWith(github.ref, 'refs/tags')
        
      #- name: Publish package to pypi
      #  run: python -m twine upload -u __token__ -p ${{ secrets.PYPI_MIIND_API_TOKEN }} --skip-existing  ./wheelhouse/*
      #  if: github.event_name == 'push' # && startsWith(github.ref, 'refs/tags')
        