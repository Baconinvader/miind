name: Build

on: [push]

jobs: 
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
            desiredCC: msvc
          - os: ubuntu-latest
            triplet: x64-linux
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
            desiredCC: gcc
          - os: macos-latest
            triplet: x64-osx
            vcpkgCommitId: '30124253eecff36bc90f73341edbfb4f845e2a1e'
            desiredCC: clang-omp
            
    env:
      buildDir: '${{ github.workspace }}/build'
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      
      - uses: lukka/get-cmake@latest
      
      - name: Ubuntu - install packages required for freeglut and fftw3
        run: |
          sudo apt-get install libxi-dev libgl1-mesa-dev libglu1-mesa-dev mesa-common-dev libxrandr-dev libxxf86vm-dev
          sudo apt-get install fftw3-dev
        if: contains( matrix.os, 'ubuntu')
        
      - name: MacOS - install xquartz for GL support, fftw, and llvm for OpenMP support
        run: brew install xquartz fftw llvm
        if: contains( matrix.os, 'macos')

      - name: dir
        run: find $RUNNER_TEMP
        shell: bash
      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash
      - name: Restore artifacts, or setup vcpkg (do not install any package)
        uses: lukka/run-vcpkg@main
        id: runvcpkg
        with:
          setupOnly: true
          vcpkgDirectory: '${{ runner.workspace }}/vcpkg'
          vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'
          # Ensure the cache key changes any time the content of the manifest file changes.
          appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
          vcpkgTriplet: ${{ matrix.triplet }}
          # Ensure the vcpkg artifacts are cached, they are generated in the 'CMAKE_BINARY_DIR/vcpkg_installed'.
          additionalCachedPaths: ${{ env.buildDir }}
      - name: Prints output of run-vcpkg's action
        run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}'"
      - name: Run CMake with vcpkg.json manifest
        uses: lukka/run-cmake@main
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          useVcpkgToolchainFile: true
          buildDirectory: '${{ env.buildDir }}'
          cmakeAppendedArgs: '"-GNinja Multi-Config" -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet}} -DCMAKE_CXX_COMPILER=${{ matrix.desiredCC}}'
          buildWithCMake: true
