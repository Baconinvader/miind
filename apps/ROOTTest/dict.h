/********************************************************************
* dict.h
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************************/
#ifdef __CINT__
#error dict.h/C is only for compilation. Abort cint.
#endif
#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>
#define G__ANSIHEADER
#define G__DICTIONARY
#define G__PRIVATE_GVALUE
#include "G__ci.h"
#include "FastAllocString.h"
extern "C" {
extern G__DLLEXPORT int G__cpp_dllrevdict();
extern G__DLLEXPORT void G__set_cpp_environmentdict();
extern G__DLLEXPORT void G__cpp_setup_tagtabledict();
extern G__DLLEXPORT void G__cpp_setup_inheritancedict();
extern G__DLLEXPORT void G__cpp_setup_typetabledict();
extern G__DLLEXPORT void G__cpp_setup_memvardict();
extern G__DLLEXPORT void G__cpp_setup_globaldict();
extern G__DLLEXPORT void G__cpp_setup_memfuncdict();
extern G__DLLEXPORT void G__cpp_setup_funcdict();
extern G__DLLEXPORT void G__cpp_setupdict();
}


#include "TObject.h"
#include "TMemberInspector.h"
#include "../../libs/ClamLib/RootLayeredNetDescription.h"
#include <algorithm>
namespace std { }
using namespace std;

#ifndef G__MEMFUNCBODY
#endif

extern G__linked_taginfo G__dictLN_TClass;
extern G__linked_taginfo G__dictLN_TBuffer;
extern G__linked_taginfo G__dictLN_TMemberInspector;
extern G__linked_taginfo G__dictLN_TObject;
extern G__linked_taginfo G__dictLN_TNamed;
extern G__linked_taginfo G__dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR;
extern G__linked_taginfo G__dictLN__RanitlEROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR;
extern G__linked_taginfo G__dictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR;
extern G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR;
extern G__linked_taginfo G__dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR;
extern G__linked_taginfo G__dictLN__RanitlETVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR;
extern G__linked_taginfo G__dictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR;
extern G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR;
extern G__linked_taginfo G__dictLN_ClamLib;
extern G__linked_taginfo G__dictLN_ClamLibcLcLRootLayerDescription;
extern G__linked_taginfo G__dictLN_vectorlEClamLibcLcLRootLayerDescriptioncOallocatorlEClamLibcLcLRootLayerDescriptiongRsPgR;
extern G__linked_taginfo G__dictLN_vectorlEClamLibcLcLRootLayerDescriptioncOallocatorlEClamLibcLcLRootLayerDescriptiongRsPgRcLcLconst_iterator;
extern G__linked_taginfo G__dictLN__RanitlEClamLibcLcLRootLayerDescriptioncOlongcOClamLibcLcLRootLayerDescriptionmUcOClamLibcLcLRootLayerDescriptionaNgR;
extern G__linked_taginfo G__dictLN_iteratorlErandom_access_iterator_tagcOClamLibcLcLRootLayerDescriptioncOlongcOClamLibcLcLRootLayerDescriptionmUcOClamLibcLcLRootLayerDescriptionaNgR;
extern G__linked_taginfo G__dictLN_vectorlEClamLibcLcLRootLayerDescriptioncOallocatorlEClamLibcLcLRootLayerDescriptiongRsPgRcLcLiterator;
extern G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEClamLibcLcLRootLayerDescriptioncOallocatorlEClamLibcLcLRootLayerDescriptiongRsPgRcLcLiteratorgR;
extern G__linked_taginfo G__dictLN_reverse_iteratorlEvectorlEClamLibcLcLRootLayerDescriptioncOallocatorlEClamLibcLcLRootLayerDescriptiongRsPgRcLcLconst_iteratorgR;

/* STUB derived class for protected member access */
typedef vector<ClamLib::RootLayerDescription,allocator<ClamLib::RootLayerDescription> > G__vectorlEClamLibcLcLRootLayerDescriptioncOallocatorlEClamLibcLcLRootLayerDescriptiongRsPgR;
